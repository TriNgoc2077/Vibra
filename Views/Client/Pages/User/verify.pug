extends ../../Layouts/default.pug

block main
    .verify-container
        .background-overlay
        .container.py-5.position-relative
            .row.justify-content-center
                .col-lg-6.col-md-8
                    .verify-box.animate-fadeIn
                        .text-center.py-4
                            .icon-wrapper.mb-3
                                i.fas.fa-headphones-alt.display-4.text-gradient
                            h3.text-white.mb-2.animate-slideDown Verification Code
                            p.text-light.mb-0.animate-slideDown
                                | We've sent a verification code to
                                br
                                span.text-gradient.fw-bold #{(data.email || "your email")}

                        .p-4
                            form(action="/user/register" method="POST")
                                .text-center.mb-4
                                    .otp-inputs.d-flex.justify-content-center.gap-2
                                        each i in [1, 2, 3, 4, 5, 6]
                                            input.form-control.form-control-lg.text-center.animate-slideUp.text-light(
                                                type="text"
                                                name=`otp${i}`
                                                maxlength="1"
                                                required
                                                style="--delay: #{i * 0.1}s"
                                            )
                                        input.d-none(type="text" name="fullName" value=data.fullName)
                                        input.d-none(type="text" name="email" value=data.email)
                                        input.d-none(type="text" name="password" value=data.password)

                                .text-center.mb-4
                                    #timer.timer-wrapper.text-light
                                        i.fas.fa-clock.me-2
                                        | Time remaining: 
                                        span.text-gradient.fw-bold 02:59

                                .d-grid.gap-2
                                    button.btn.btn-gradient.btn-lg.animate-pulse(type="submit")
                                        i.fas.fa-check-circle.me-2
                                        | Verify Code

                            form(action="/user/verify" method="POST")
                                input.d-none(type="text" name="fullName" value=data.fullName)
                                input.d-none(type="text" name="email" value=data.email)
                                input.d-none(type="text" name="password" value=data.password)
                                .text-center.mt-3.text-light
                                    button.btn.btn-link.text-gradient.text-decoration-none#resend-btn(
                                        resend-code-button
                                        type="submit"
                                        disabled
                                    )
                                        i.fas.fa-redo.me-2
                                        | Resend Code

                        .py-3.text-center.border-top.border-dark
                            a.text-decoration-none.text-light.hover-effect(href="/user/login")
                                i.fas.fa-arrow-left.me-2
                                | Back to Login

            // Troubleshooting
            .row.justify-content-center.mt-4
                .col-lg-6.text-center
                    p.text-light.mb-0
                        | Having trouble? 
                        a.text-gradient.text-decoration-none(href="/contact") Contact Support
                        |  or try 
                        a.text-gradient.text-decoration-none(href="#" onclick="return false;") using a different email

    style.
        .verify-container {
            min-height: 100vh;
            background-image: url('/Images/background-verify.jpg');
            background-size: cover;
            background-position: center;
            position: relative;
        }

        .background-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.8);
            backdrop-filter: blur(10px);
        }

        .verify-box {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            border: 1px solid rgba(255, 255, 255, 0.1);
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
            transition: all 0.3s ease;
        }

        .verify-box:hover {
            transform: translateY(-5px);
            border-color: rgba(255, 255, 255, 0.2);
        }

        .text-gradient {
            background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .btn-gradient {
            background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
            border: none;
            transition: all 0.3s ease;
        }

        .btn-gradient:hover {
            opacity: 0.9;
            transform: translateY(-2px);
        }

        .otp-inputs input {
            width: 50px !important;
            height: 60px !important;
            font-size: 24px !important;
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            color: white;
            transition: all 0.3s ease;
        }

        .otp-inputs input:focus {
            background: rgba(255, 255, 255, 0.1);
            border-color: rgba(255, 255, 255, 0.3);
            box-shadow: 0 0 15px rgba(255, 255, 255, 0.1);
        }

        .instruction-card {
            padding: 20px;
            border-radius: 15px;
            background: rgba(255, 255, 255, 0.02);
            border: 1px solid rgba(255, 255, 255, 0.05);
            transition: all 0.3s ease;
        }

        .instruction-card:hover {
            background: rgba(255, 255, 255, 0.05);
            transform: translateY(-3px);
        }

        .icon-box {
            font-size: 2rem;
            margin-bottom: 1rem;
        }

        .alert-custom {
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 15px;
        }

        .hover-effect {
            transition: all 0.3s ease;
        }

        .hover-effect:hover {
            color: var(--bs-primary) !important;
            transform: translateX(-5px);
        }

        /* Animations */
        .animate-fadeIn {
            animation: fadeIn 1s ease-out;
        }

        .animate-slideDown {
            animation: slideDown 1s ease-out;
        }

        .animate-slideUp {
            animation: slideUp 0.5s ease-out;
            animation-delay: var(--delay, 0s);
            animation-fill-mode: both;
        }

        .animate-slideRight {
            animation: slideRight 1s ease-out;
            animation-delay: var(--delay, 0s);
            animation-fill-mode: both;
        }

        .animate-pulse {
            animation: pulse 2s infinite;
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @keyframes slideDown {
            from { transform: translateY(-30px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        @keyframes slideUp {
            from { transform: translateY(20px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        @keyframes slideRight {
            from { transform: translateX(-30px); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }

        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }

    script.
        // Original JavaScript code remains the same
        document.addEventListener('DOMContentLoaded', function() {
            const inputs = document.querySelectorAll('input[type="text"]');
            
            inputs[0].focus();

            inputs.forEach((input, index) => {
                input.addEventListener('input', function() {
                    if (this.value.length === 1 && index < inputs.length - 1) {
                        inputs[index + 1].focus();
                    }
                });

                input.addEventListener('keydown', function(e) {
                    if (e.key === 'Backspace' && !this.value && index > 0) {
                        inputs[index - 1].focus();
                    }
                });
            });

            let timeLeft = 180;
            const timerDisplay = document.getElementById('timer');
            const resendBtn = document.getElementById('resend-btn');

            const updateTimer = () => {
                const minutes = Math.floor(timeLeft / 60);
                const seconds = timeLeft % 60;
                timerDisplay.querySelector('span').textContent = 
                    `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;

                if (timeLeft === 0) {
                    resendBtn.disabled = false;
                    return;
                }

                timeLeft--;
                setTimeout(updateTimer, 1000);
            };

            updateTimer();
        });